{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\noopu\\\\OneDrive\\\\Documents\\\\DIYKaraoke\\\\Frontend\\\\node_modules\\\\react-native-material-dropdown-v2\\\\src\\\\components\\\\dropdown\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Ripple from 'react-native-material-ripple';\nimport { TextInput } from 'react-native-paper';\nimport DropdownItem from \"../item\";\nimport styles from \"./styles\";\n\nvar Dropdown = function (_PureComponent) {\n  _inherits(Dropdown, _PureComponent);\n\n  var _super = _createSuper(Dropdown);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _super.call(this, props);\n    _this.onPress = _this.onPress.bind(_assertThisInitialized(_this));\n    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_this));\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.updateRippleRef = _this.updateRef.bind(_assertThisInitialized(_this), 'ripple');\n    _this.updateContainerRef = _this.updateRef.bind(_assertThisInitialized(_this), 'container');\n    _this.updateScrollRef = _this.updateRef.bind(_assertThisInitialized(_this), 'scroll');\n    _this.renderAccessory = _this.renderAccessory.bind(_assertThisInitialized(_this));\n    _this.renderItem = _this.renderItem.bind(_assertThisInitialized(_this));\n    _this.keyExtractor = _this.keyExtractor.bind(_assertThisInitialized(_this));\n\n    _this.blur = function () {\n      return _this.onClose();\n    };\n\n    _this.focus = _this.onPress;\n    var value = _this.props.value;\n    _this.mounted = false;\n    _this.focused = false;\n    _this.state = {\n      opacity: new Animated.Value(0),\n      selected: -1,\n      modal: false,\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var value = _ref.value;\n\n      if (value !== this.props.value) {\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress(event) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          disabled = _this$props.disabled,\n          onFocus = _this$props.onFocus,\n          itemPadding = _this$props.itemPadding,\n          rippleDuration = _this$props.rippleDuration,\n          dropdownOffset = _this$props.dropdownOffset,\n          _this$props$dropdownM = _this$props.dropdownMargins,\n          minMargin = _this$props$dropdownM.min,\n          maxMargin = _this$props$dropdownM.max,\n          animationDuration = _this$props.animationDuration,\n          absoluteRTLLayout = _this$props.absoluteRTLLayout,\n          useNativeDriver = _this$props.useNativeDriver;\n\n      if (disabled) {\n        return;\n      }\n\n      var itemCount = data.length;\n      var timestamp = Date.now();\n\n      if (null != event) {\n        event.nativeEvent.locationY -= this.rippleInsets().top;\n        event.nativeEvent.locationX -= this.rippleInsets().left;\n        this.ripple.startRipple(event);\n      }\n\n      if (!itemCount) {\n        return;\n      }\n\n      this.focused = true;\n\n      if ('function' === typeof onFocus) {\n        onFocus();\n      }\n\n      var dimensions = Dimensions.get('window');\n      this.container.measureInWindow(function (x, y, containerWidth, containerHeight) {\n        var opacity = _this2.state.opacity;\n\n        if (I18nManager.isRTL && !absoluteRTLLayout) {\n          x = dimensions.width - (x + containerWidth);\n        }\n\n        var delay = Math.max(0, rippleDuration - animationDuration - (Date.now() - timestamp));\n\n        var selected = _this2.selectedIndex();\n\n        var leftInset;\n        var left = x + dropdownOffset.left - maxMargin;\n\n        if (left > minMargin) {\n          leftInset = maxMargin;\n        } else {\n          left = minMargin;\n          leftInset = minMargin;\n        }\n\n        var right = x + containerWidth + maxMargin;\n        var rightInset;\n\n        if (dimensions.width - right > minMargin) {\n          rightInset = maxMargin;\n        } else {\n          right = dimensions.width - minMargin;\n          rightInset = minMargin;\n        }\n\n        var top = y + dropdownOffset.top - itemPadding;\n\n        _this2.setState({\n          modal: true,\n          width: right - left,\n          top: top,\n          left: left,\n          leftInset: leftInset,\n          rightInset: rightInset,\n          selected: selected\n        });\n\n        setTimeout(function () {\n          if (_this2.mounted) {\n            _this2.resetScrollOffset();\n\n            Animated.timing(opacity, {\n              duration: animationDuration,\n              toValue: 1,\n              useNativeDriver: useNativeDriver\n            }).start(function () {\n              if (_this2.mounted && 'ios' === Platform.OS) {\n                var _ref2 = _this2.scroll || {},\n                    flashScrollIndicators = _ref2.flashScrollIndicators;\n\n                if ('function' === typeof flashScrollIndicators) {\n                  flashScrollIndicators.call(_this2.scroll);\n                }\n              }\n            });\n          }\n        }, delay);\n      });\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      var _this3 = this;\n\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.value;\n      var _this$props2 = this.props,\n          onBlur = _this$props2.onBlur,\n          animationDuration = _this$props2.animationDuration,\n          useNativeDriver = _this$props2.useNativeDriver;\n      var opacity = this.state.opacity;\n      Animated.timing(opacity, {\n        duration: animationDuration,\n        toValue: 0,\n        useNativeDriver: useNativeDriver\n      }).start(function () {\n        _this3.focused = false;\n\n        if ('function' === typeof onBlur) {\n          onBlur();\n        }\n\n        if (_this3.mounted) {\n          _this3.setState({\n            value: value,\n            modal: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(index) {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          valueExtractor = _this$props3.valueExtractor,\n          onChangeText = _this$props3.onChangeText,\n          animationDuration = _this$props3.animationDuration,\n          rippleDuration = _this$props3.rippleDuration;\n      var value = valueExtractor(data[index], index);\n      var delay = Math.max(0, rippleDuration - animationDuration);\n\n      if ('function' === typeof onChangeText) {\n        onChangeText(value, index, data);\n      }\n\n      setTimeout(function () {\n        return _this4.onClose(value);\n      }, delay);\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      var onLayout = this.props.onLayout;\n\n      if ('function' === typeof onLayout) {\n        onLayout(event);\n      }\n    }\n  }, {\n    key: \"value\",\n    value: function value() {\n      var value = this.state.value;\n      return value;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex() {\n      var value = this.state.value;\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          valueExtractor = _this$props4.valueExtractor;\n      return data.findIndex(function (item, index) {\n        return null != item && value === valueExtractor(item, index);\n      });\n    }\n  }, {\n    key: \"selectedItem\",\n    value: function selectedItem() {\n      var data = this.props.data;\n      return data[this.selectedIndex()];\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.focused;\n    }\n  }, {\n    key: \"itemSize\",\n    value: function itemSize() {\n      var _this$props5 = this.props,\n          fontSize = _this$props5.fontSize,\n          itemPadding = _this$props5.itemPadding;\n      return Math.ceil(fontSize * 1.5 + itemPadding * 2);\n    }\n  }, {\n    key: \"visibleItemCount\",\n    value: function visibleItemCount() {\n      var _this$props6 = this.props,\n          data = _this$props6.data,\n          itemCount = _this$props6.itemCount;\n      return Math.min(data.length, itemCount);\n    }\n  }, {\n    key: \"tailItemCount\",\n    value: function tailItemCount() {\n      return Math.max(this.visibleItemCount() - 2, 0);\n    }\n  }, {\n    key: \"rippleInsets\",\n    value: function rippleInsets() {\n      var _ref3 = this.props.rippleInsets || {},\n          _ref3$top = _ref3.top,\n          top = _ref3$top === void 0 ? 16 : _ref3$top,\n          _ref3$right = _ref3.right,\n          right = _ref3$right === void 0 ? 0 : _ref3$right,\n          _ref3$bottom = _ref3.bottom,\n          bottom = _ref3$bottom === void 0 ? -8 : _ref3$bottom,\n          _ref3$left = _ref3.left,\n          left = _ref3$left === void 0 ? 0 : _ref3$left;\n\n      return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n      };\n    }\n  }, {\n    key: \"resetScrollOffset\",\n    value: function resetScrollOffset() {\n      var selected = this.state.selected;\n      var _this$props7 = this.props,\n          data = _this$props7.data,\n          dropdownPosition = _this$props7.dropdownPosition;\n      var offset = 0;\n      var itemCount = data.length;\n      var itemSize = this.itemSize();\n      var tailItemCount = this.tailItemCount();\n      var visibleItemCount = this.visibleItemCount();\n\n      if (itemCount > visibleItemCount) {\n        if (null == dropdownPosition) {\n          switch (selected) {\n            case -1:\n              break;\n\n            case 0:\n            case 1:\n              break;\n\n            default:\n              if (selected >= itemCount - tailItemCount) {\n                offset = itemSize * (itemCount - visibleItemCount);\n              } else {\n                offset = itemSize * (selected - 1);\n              }\n\n          }\n        } else {\n          var index = selected - dropdownPosition;\n\n          if (dropdownPosition < 0) {\n            index -= visibleItemCount;\n          }\n\n          index = Math.max(0, index);\n          index = Math.min(index, itemCount - visibleItemCount);\n\n          if (~selected) {\n            offset = itemSize * index;\n          }\n        }\n      }\n\n      if (this.scroll) {\n        this.scroll.scrollToOffset({\n          offset: offset,\n          animated: false\n        });\n      }\n    }\n  }, {\n    key: \"updateRef\",\n    value: function updateRef(name, ref) {\n      this[name] = ref;\n    }\n  }, {\n    key: \"keyExtractor\",\n    value: function keyExtractor(item, index) {\n      var valueExtractor = this.props.valueExtractor;\n      return index + \"-\" + valueExtractor(item, index);\n    }\n  }, {\n    key: \"renderBase\",\n    value: function renderBase(props) {\n      var value = this.state.value;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          renderBase = _this$props8.renderBase,\n          labelExtractor = _this$props8.labelExtractor,\n          dropdownOffset = _this$props8.dropdownOffset,\n          _this$props8$renderAc = _this$props8.renderAccessory,\n          renderAccessory = _this$props8$renderAc === void 0 ? this.renderAccessory : _this$props8$renderAc;\n      var index = this.selectedIndex();\n      var title;\n\n      if (~index) {\n        title = labelExtractor(data[index], index);\n      }\n\n      if (null == title) {\n        title = value;\n      }\n\n      if ('function' === typeof renderBase) {\n        return renderBase(_objectSpread(_objectSpread({}, props), {}, {\n          title: title,\n          value: value,\n          renderAccessory: renderAccessory\n        }));\n      }\n\n      title = null == title || 'string' === typeof title ? title : String(title);\n      return React.createElement(TextInput, _extends({\n        style: {\n          backgroundColor: \"transparent\",\n          marginBottom: 16\n        },\n        label: \"\"\n      }, props, {\n        value: title,\n        editable: false,\n        onChangeText: undefined,\n        renderAccessory: renderAccessory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"renderRipple\",\n    value: function renderRipple() {\n      var _this$props9 = this.props,\n          baseColor = _this$props9.baseColor,\n          _this$props9$rippleCo = _this$props9.rippleColor,\n          rippleColor = _this$props9$rippleCo === void 0 ? baseColor : _this$props9$rippleCo,\n          rippleOpacity = _this$props9.rippleOpacity,\n          rippleDuration = _this$props9.rippleDuration,\n          rippleCentered = _this$props9.rippleCentered,\n          rippleSequential = _this$props9.rippleSequential;\n\n      var _this$rippleInsets = this.rippleInsets(),\n          bottom = _this$rippleInsets.bottom,\n          insets = _objectWithoutProperties(_this$rippleInsets, [\"bottom\"]);\n\n      var style = _objectSpread(_objectSpread({}, insets), {}, {\n        height: this.itemSize() - bottom,\n        position: 'absolute'\n      });\n\n      return React.createElement(Ripple, {\n        style: style,\n        rippleColor: rippleColor,\n        rippleDuration: rippleDuration,\n        rippleOpacity: rippleOpacity,\n        rippleCentered: rippleCentered,\n        rippleSequential: rippleSequential,\n        ref: this.updateRippleRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      var backgroundColor = this.props.baseColor;\n      var triangleStyle = {\n        backgroundColor: backgroundColor\n      };\n      return React.createElement(View, {\n        style: styles.accessory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.triangleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.triangle, triangleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(_ref4) {\n      var item = _ref4.item,\n          index = _ref4.index;\n\n      if (null == item) {\n        return null;\n      }\n\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          leftInset = _this$state.leftInset,\n          rightInset = _this$state.rightInset;\n      var _this$props10 = this.props,\n          valueExtractor = _this$props10.valueExtractor,\n          labelExtractor = _this$props10.labelExtractor,\n          propsExtractor = _this$props10.propsExtractor,\n          textColor = _this$props10.textColor,\n          itemColor = _this$props10.itemColor,\n          baseColor = _this$props10.baseColor,\n          _this$props10$selecte = _this$props10.selectedItemColor,\n          selectedItemColor = _this$props10$selecte === void 0 ? textColor : _this$props10$selecte,\n          _this$props10$disable = _this$props10.disabledItemColor,\n          disabledItemColor = _this$props10$disable === void 0 ? baseColor : _this$props10$disable,\n          fontSize = _this$props10.fontSize,\n          itemTextStyle = _this$props10.itemTextStyle,\n          rippleOpacity = _this$props10.rippleOpacity,\n          rippleDuration = _this$props10.rippleDuration,\n          shadeOpacity = _this$props10.shadeOpacity;\n      var props = propsExtractor(item, index);\n\n      var _props = props = _objectSpread(_objectSpread({\n        rippleDuration: rippleDuration,\n        rippleOpacity: rippleOpacity,\n        rippleColor: baseColor,\n        shadeColor: baseColor,\n        shadeOpacity: shadeOpacity\n      }, props), {}, {\n        onPress: this.onSelect\n      }),\n          style = _props.style,\n          disabled = _props.disabled;\n\n      var value = valueExtractor(item, index);\n      var label = labelExtractor(item, index);\n      var title = null == label ? value : label;\n      var color = disabled ? disabledItemColor : ~selected ? index === selected ? selectedItemColor : itemColor : selectedItemColor;\n      var textStyle = {\n        color: color,\n        fontSize: fontSize\n      };\n      props.style = [style, {\n        height: this.itemSize(),\n        paddingLeft: leftInset,\n        paddingRight: rightInset\n      }];\n      return React.createElement(DropdownItem, _extends({\n        index: index\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: [styles.item, itemTextStyle, textStyle],\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }\n      }, title));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          renderBase = _this$props11.renderBase,\n          renderAccessory = _this$props11.renderAccessory,\n          containerStyle = _this$props11.containerStyle,\n          labelContainerStyle = _this$props11.labelContainerStyle,\n          overlayStyleOverrides = _this$props11.overlayStyle,\n          pickerStyleOverrides = _this$props11.pickerStyle,\n          rippleInsets = _this$props11.rippleInsets,\n          rippleOpacity = _this$props11.rippleOpacity,\n          rippleCentered = _this$props11.rippleCentered,\n          rippleSequential = _this$props11.rippleSequential,\n          hitSlop = _this$props11.hitSlop,\n          pressRetentionOffset = _this$props11.pressRetentionOffset,\n          testID = _this$props11.testID,\n          nativeID = _this$props11.nativeID,\n          accessible = _this$props11.accessible,\n          accessibilityLabel = _this$props11.accessibilityLabel,\n          supportedOrientations = _this$props11.supportedOrientations,\n          props = _objectWithoutProperties(_this$props11, [\"renderBase\", \"renderAccessory\", \"containerStyle\", \"labelContainerStyle\", \"overlayStyle\", \"pickerStyle\", \"rippleInsets\", \"rippleOpacity\", \"rippleCentered\", \"rippleSequential\", \"hitSlop\", \"pressRetentionOffset\", \"testID\", \"nativeID\", \"accessible\", \"accessibilityLabel\", \"supportedOrientations\"]);\n\n      var data = props.data,\n          disabled = props.disabled,\n          itemPadding = props.itemPadding,\n          dropdownPosition = props.dropdownPosition;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top,\n          width = _this$state2.width,\n          opacity = _this$state2.opacity,\n          selected = _this$state2.selected,\n          modal = _this$state2.modal;\n      var itemCount = data.length;\n      var visibleItemCount = this.visibleItemCount();\n      var tailItemCount = this.tailItemCount();\n      var itemSize = this.itemSize();\n      var height = 2 * itemPadding + itemSize * visibleItemCount;\n      var translateY = -itemPadding;\n\n      if (null == dropdownPosition) {\n        switch (selected) {\n          case -1:\n            translateY -= 1 === itemCount ? 0 : itemSize;\n            break;\n\n          case 0:\n            break;\n\n          default:\n            if (selected >= itemCount - tailItemCount) {\n              translateY -= itemSize * (visibleItemCount - (itemCount - selected));\n            } else {\n              translateY -= itemSize;\n            }\n\n        }\n      } else {\n        if (dropdownPosition < 0) {\n          translateY -= itemSize * (visibleItemCount + dropdownPosition);\n        } else {\n          translateY -= itemSize * dropdownPosition;\n        }\n      }\n\n      var overlayStyle = {\n        opacity: opacity\n      };\n      var pickerStyle = {\n        width: width,\n        height: height,\n        top: top,\n        left: left,\n        transform: [{\n          translateY: translateY\n        }]\n      };\n      var touchableProps = {\n        disabled: disabled,\n        hitSlop: hitSlop,\n        pressRetentionOffset: pressRetentionOffset,\n        onPress: this.onPress,\n        testID: testID,\n        nativeID: nativeID,\n        accessible: accessible,\n        accessibilityLabel: accessibilityLabel\n      };\n      return React.createElement(View, {\n        onLayout: this.onLayout,\n        ref: this.updateContainerRef,\n        style: containerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableWithoutFeedback, _extends({}, touchableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        pointerEvents: \"box-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 21\n        }\n      }, this.renderBase(props), this.renderRipple())), React.createElement(Modal, {\n        visible: modal,\n        transparent: true,\n        onRequestClose: this.blur,\n        supportedOrientations: supportedOrientations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 17\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.overlay, overlayStyle, overlayStyleOverrides],\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: this.blur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [styles.picker, pickerStyle, pickerStyleOverrides],\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 25\n        }\n      }, React.createElement(FlatList, {\n        ref: this.updateScrollRef,\n        data: data,\n        style: styles.scroll,\n        renderItem: this.renderItem,\n        keyExtractor: this.keyExtractor,\n        scrollEnabled: visibleItemCount < itemCount,\n        contentContainerStyle: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return Dropdown;\n}(PureComponent);\n\nDropdown.defaultProps = {\n  hitSlop: {\n    top: 6,\n    right: 4,\n    bottom: 6,\n    left: 4\n  },\n  disabled: false,\n  data: [],\n  valueExtractor: function valueExtractor() {\n    var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        value = _ref5.value;\n\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return value;\n  },\n  labelExtractor: function labelExtractor() {\n    var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        label = _ref6.label;\n\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return label;\n  },\n  propsExtractor: function propsExtractor() {\n    return null;\n  },\n  absoluteRTLLayout: false,\n  dropdownOffset: {\n    top: 32,\n    left: 0\n  },\n  dropdownMargins: {\n    min: 8,\n    max: 16\n  },\n  rippleCentered: false,\n  rippleSequential: true,\n  rippleInsets: {\n    top: 16,\n    right: 0,\n    bottom: -8,\n    left: 0\n  },\n  rippleOpacity: 0.54,\n  shadeOpacity: 0.12,\n  rippleDuration: 400,\n  animationDuration: 225,\n  fontSize: 16,\n  textColor: 'rgba(0, 0, 0, .87)',\n  itemColor: 'rgba(0, 0, 0, .54)',\n  baseColor: 'rgba(0, 0, 0, .38)',\n  itemCount: 4,\n  itemPadding: 8,\n  supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n  useNativeDriver: false\n};\nDropdown.propTypes = _objectSpread(_objectSpread({}, TouchableWithoutFeedback.propTypes), {}, {\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  data: PropTypes.arrayOf(PropTypes.object),\n  valueExtractor: PropTypes.func,\n  labelExtractor: PropTypes.func,\n  propsExtractor: PropTypes.func,\n  absoluteRTLLayout: PropTypes.bool,\n  dropdownOffset: PropTypes.shape({\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired\n  }),\n  dropdownMargins: PropTypes.shape({\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired\n  }),\n  dropdownPosition: PropTypes.number,\n  rippleColor: PropTypes.string,\n  rippleCentered: PropTypes.bool,\n  rippleSequential: PropTypes.bool,\n  rippleInsets: PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number\n  }),\n  rippleOpacity: PropTypes.number,\n  shadeOpacity: PropTypes.number,\n  rippleDuration: PropTypes.number,\n  animationDuration: PropTypes.number,\n  fontSize: PropTypes.number,\n  textColor: PropTypes.string,\n  itemColor: PropTypes.string,\n  selectedItemColor: PropTypes.string,\n  disabledItemColor: PropTypes.string,\n  baseColor: PropTypes.string,\n  itemTextStyle: Text.propTypes.style,\n  itemCount: PropTypes.number,\n  itemPadding: PropTypes.number,\n  onLayout: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  renderBase: PropTypes.func,\n  renderAccessory: PropTypes.func,\n  labelContainerStyle: (ViewPropTypes || View.propTypes).style,\n  containerStyle: (ViewPropTypes || View.propTypes).style,\n  overlayStyle: (ViewPropTypes || View.propTypes).style,\n  pickerStyle: (ViewPropTypes || View.propTypes).style,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.string),\n  useNativeDriver: PropTypes.bool\n});\nexport { Dropdown as default };","map":{"version":3,"sources":["C:/Users/noopu/OneDrive/Documents/DIYKaraoke/Frontend/node_modules/react-native-material-dropdown-v2/src/components/dropdown/index.js"],"names":["PropTypes","React","PureComponent","ViewPropTypes","Ripple","TextInput","DropdownItem","styles","Dropdown","props","onPress","bind","onClose","onSelect","onLayout","updateRippleRef","updateRef","updateContainerRef","updateScrollRef","renderAccessory","renderItem","keyExtractor","blur","focus","value","mounted","focused","state","opacity","Animated","Value","selected","modal","setState","event","data","disabled","onFocus","itemPadding","rippleDuration","dropdownOffset","dropdownMargins","minMargin","min","maxMargin","max","animationDuration","absoluteRTLLayout","useNativeDriver","itemCount","length","timestamp","Date","now","nativeEvent","locationY","rippleInsets","top","locationX","left","ripple","startRipple","dimensions","Dimensions","get","container","measureInWindow","x","y","containerWidth","containerHeight","I18nManager","isRTL","width","delay","Math","selectedIndex","leftInset","right","rightInset","setTimeout","resetScrollOffset","timing","duration","toValue","start","Platform","OS","scroll","flashScrollIndicators","call","onBlur","index","valueExtractor","onChangeText","findIndex","item","fontSize","ceil","visibleItemCount","bottom","dropdownPosition","offset","itemSize","tailItemCount","scrollToOffset","animated","name","ref","renderBase","labelExtractor","title","String","backgroundColor","marginBottom","undefined","baseColor","rippleColor","rippleOpacity","rippleCentered","rippleSequential","insets","style","height","position","triangleStyle","accessory","triangleContainer","triangle","propsExtractor","textColor","itemColor","selectedItemColor","disabledItemColor","itemTextStyle","shadeOpacity","shadeColor","label","color","textStyle","paddingLeft","paddingRight","containerStyle","labelContainerStyle","overlayStyleOverrides","overlayStyle","pickerStyleOverrides","pickerStyle","hitSlop","pressRetentionOffset","testID","nativeID","accessible","accessibilityLabel","supportedOrientations","translateY","transform","touchableProps","renderRipple","overlay","picker","scrollContainer","defaultProps","propTypes","TouchableWithoutFeedback","bool","oneOfType","string","number","arrayOf","object","func","shape","isRequired","Text","View"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    Animated,\r\n    Modal,\r\n    TouchableWithoutFeedback,\r\n    Dimensions,\r\n    Platform,\r\n    ViewPropTypes,\r\n    I18nManager,\r\n} from 'react-native';\r\nimport Ripple from 'react-native-material-ripple';\r\nimport { TextInput } from 'react-native-paper';\r\n\r\nimport DropdownItem from '../item';\r\nimport styles from './styles';\r\n\r\nexport default class Dropdown extends PureComponent {\r\n    static defaultProps = {\r\n        hitSlop: { top: 6, right: 4, bottom: 6, left: 4 },\r\n\r\n        disabled: false,\r\n\r\n        data: [],\r\n\r\n        valueExtractor: ({ value } = {}, index) => value,\r\n        labelExtractor: ({ label } = {}, index) => label,\r\n        propsExtractor: () => null,\r\n\r\n        absoluteRTLLayout: false,\r\n\r\n        dropdownOffset: {\r\n            top: 32,\r\n            left: 0,\r\n        },\r\n\r\n        dropdownMargins: {\r\n            min: 8,\r\n            max: 16,\r\n        },\r\n\r\n        rippleCentered: false,\r\n        rippleSequential: true,\r\n\r\n        rippleInsets: {\r\n            top: 16,\r\n            right: 0,\r\n            bottom: -8,\r\n            left: 0,\r\n        },\r\n\r\n        rippleOpacity: 0.54,\r\n        shadeOpacity: 0.12,\r\n\r\n        rippleDuration: 400,\r\n        animationDuration: 225,\r\n\r\n        fontSize: 16,\r\n\r\n        textColor: 'rgba(0, 0, 0, .87)',\r\n        itemColor: 'rgba(0, 0, 0, .54)',\r\n        baseColor: 'rgba(0, 0, 0, .38)',\r\n\r\n        itemCount: 4,\r\n        itemPadding: 8,\r\n\r\n        supportedOrientations: [\r\n            'portrait',\r\n            'portrait-upside-down',\r\n            'landscape',\r\n            'landscape-left',\r\n            'landscape-right',\r\n        ],\r\n\r\n        useNativeDriver: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        ...TouchableWithoutFeedback.propTypes,\r\n\r\n        disabled: PropTypes.bool,\r\n\r\n        value: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number,\r\n        ]),\r\n\r\n        data: PropTypes.arrayOf(PropTypes.object),\r\n\r\n        valueExtractor: PropTypes.func,\r\n        labelExtractor: PropTypes.func,\r\n        propsExtractor: PropTypes.func,\r\n\r\n        absoluteRTLLayout: PropTypes.bool,\r\n\r\n        dropdownOffset: PropTypes.shape({\r\n            top: PropTypes.number.isRequired,\r\n            left: PropTypes.number.isRequired,\r\n        }),\r\n\r\n        dropdownMargins: PropTypes.shape({\r\n            min: PropTypes.number.isRequired,\r\n            max: PropTypes.number.isRequired,\r\n        }),\r\n\r\n        dropdownPosition: PropTypes.number,\r\n\r\n        rippleColor: PropTypes.string,\r\n        rippleCentered: PropTypes.bool,\r\n        rippleSequential: PropTypes.bool,\r\n\r\n        rippleInsets: PropTypes.shape({\r\n            top: PropTypes.number,\r\n            right: PropTypes.number,\r\n            bottom: PropTypes.number,\r\n            left: PropTypes.number,\r\n        }),\r\n\r\n        rippleOpacity: PropTypes.number,\r\n        shadeOpacity: PropTypes.number,\r\n\r\n        rippleDuration: PropTypes.number,\r\n        animationDuration: PropTypes.number,\r\n\r\n        fontSize: PropTypes.number,\r\n\r\n        textColor: PropTypes.string,\r\n        itemColor: PropTypes.string,\r\n        selectedItemColor: PropTypes.string,\r\n        disabledItemColor: PropTypes.string,\r\n        baseColor: PropTypes.string,\r\n\r\n        itemTextStyle: Text.propTypes.style,\r\n\r\n        itemCount: PropTypes.number,\r\n        itemPadding: PropTypes.number,\r\n\r\n        onLayout: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func,\r\n        onChangeText: PropTypes.func,\r\n\r\n        renderBase: PropTypes.func,\r\n        renderAccessory: PropTypes.func,\r\n\r\n        labelContainerStyle: (ViewPropTypes || View.propTypes).style,\r\n        containerStyle: (ViewPropTypes || View.propTypes).style,\r\n        overlayStyle: (ViewPropTypes || View.propTypes).style,\r\n        pickerStyle: (ViewPropTypes || View.propTypes).style,\r\n\r\n        supportedOrientations: PropTypes.arrayOf(PropTypes.string),\r\n\r\n        useNativeDriver: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onPress = this.onPress.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onLayout = this.onLayout.bind(this);\r\n\r\n        this.updateRippleRef = this.updateRef.bind(this, 'ripple');\r\n        this.updateContainerRef = this.updateRef.bind(this, 'container');\r\n        this.updateScrollRef = this.updateRef.bind(this, 'scroll');\r\n\r\n        this.renderAccessory = this.renderAccessory.bind(this);\r\n        this.renderItem = this.renderItem.bind(this);\r\n\r\n        this.keyExtractor = this.keyExtractor.bind(this);\r\n\r\n        this.blur = () => this.onClose();\r\n        this.focus = this.onPress;\r\n\r\n        let { value } = this.props;\r\n\r\n        this.mounted = false;\r\n        this.focused = false;\r\n\r\n        this.state = {\r\n            opacity: new Animated.Value(0),\r\n            selected: -1,\r\n            modal: false,\r\n            value,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps({ value }) {\r\n        if (value !== this.props.value) {\r\n            this.setState({ value });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onPress(event) {\r\n        let {\r\n            data,\r\n            disabled,\r\n            onFocus,\r\n            itemPadding,\r\n            rippleDuration,\r\n            dropdownOffset,\r\n            dropdownMargins: { min: minMargin, max: maxMargin },\r\n            animationDuration,\r\n            absoluteRTLLayout,\r\n            useNativeDriver,\r\n        } = this.props;\r\n\r\n        if (disabled) {\r\n            return;\r\n        }\r\n\r\n        let itemCount = data.length;\r\n        let timestamp = Date.now();\r\n\r\n        if (null != event) {\r\n            /* Adjust event location */\r\n            event.nativeEvent.locationY -= this.rippleInsets().top;\r\n            event.nativeEvent.locationX -= this.rippleInsets().left;\r\n\r\n            /* Start ripple directly from event */\r\n            this.ripple.startRipple(event);\r\n        }\r\n\r\n        if (!itemCount) {\r\n            return;\r\n        }\r\n\r\n        this.focused = true;\r\n\r\n        if ('function' === typeof onFocus) {\r\n            onFocus();\r\n        }\r\n\r\n        let dimensions = Dimensions.get('window');\r\n\r\n        this.container.measureInWindow((x, y, containerWidth, containerHeight) => {\r\n            let { opacity } = this.state;\r\n\r\n            /* Adjust coordinates for relative layout in RTL locale */\r\n            if (I18nManager.isRTL && !absoluteRTLLayout) {\r\n                x = dimensions.width - (x + containerWidth);\r\n            }\r\n\r\n            let delay = Math.max(0, rippleDuration - animationDuration - (Date.now() - timestamp));\r\n            let selected = this.selectedIndex();\r\n\r\n            let leftInset;\r\n            let left = x\r\n                + dropdownOffset.left\r\n                - maxMargin;\r\n\r\n            if (left > minMargin) {\r\n                leftInset = maxMargin;\r\n            } else {\r\n                left = minMargin;\r\n                leftInset = minMargin;\r\n            }\r\n\r\n            let right = x + containerWidth + maxMargin;\r\n            let rightInset;\r\n\r\n            if (dimensions.width - right > minMargin) {\r\n                rightInset = maxMargin;\r\n            } else {\r\n                right = dimensions.width - minMargin;\r\n                rightInset = minMargin;\r\n            }\r\n\r\n            let top = y\r\n                + dropdownOffset.top\r\n                - itemPadding;\r\n\r\n            this.setState({\r\n                modal: true,\r\n                width: right - left,\r\n                top,\r\n                left,\r\n                leftInset,\r\n                rightInset,\r\n                selected,\r\n            });\r\n\r\n            setTimeout((() => {\r\n                if (this.mounted) {\r\n                    this.resetScrollOffset();\r\n\r\n                    Animated\r\n                        .timing(opacity, {\r\n                            duration: animationDuration,\r\n                            toValue: 1,\r\n                            useNativeDriver,\r\n                        })\r\n                        .start(() => {\r\n                            if (this.mounted && 'ios' === Platform.OS) {\r\n                                let { flashScrollIndicators } = this.scroll || {};\r\n\r\n                                if ('function' === typeof flashScrollIndicators) {\r\n                                    flashScrollIndicators.call(this.scroll);\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n            }), delay);\r\n        });\r\n    }\r\n\r\n    onClose(value = this.state.value) {\r\n        let { onBlur, animationDuration, useNativeDriver } = this.props;\r\n        let { opacity } = this.state;\r\n\r\n        Animated\r\n            .timing(opacity, {\r\n                duration: animationDuration,\r\n                toValue: 0,\r\n                useNativeDriver,\r\n            })\r\n            .start(() => {\r\n                this.focused = false;\r\n\r\n                if ('function' === typeof onBlur) {\r\n                    onBlur();\r\n                }\r\n\r\n                if (this.mounted) {\r\n                    this.setState({ value, modal: false });\r\n                }\r\n            });\r\n    }\r\n\r\n    onSelect(index) {\r\n        let {\r\n            data,\r\n            valueExtractor,\r\n            onChangeText,\r\n            animationDuration,\r\n            rippleDuration,\r\n        } = this.props;\r\n\r\n        let value = valueExtractor(data[index], index);\r\n        let delay = Math.max(0, rippleDuration - animationDuration);\r\n\r\n        if ('function' === typeof onChangeText) {\r\n            onChangeText(value, index, data);\r\n        }\r\n\r\n        setTimeout(() => this.onClose(value), delay);\r\n    }\r\n\r\n    onLayout(event) {\r\n        let { onLayout } = this.props;\r\n\r\n        if ('function' === typeof onLayout) {\r\n            onLayout(event);\r\n        }\r\n    }\r\n\r\n    value() {\r\n        let { value } = this.state;\r\n\r\n        return value;\r\n    }\r\n\r\n    selectedIndex() {\r\n        let { value } = this.state;\r\n        let { data, valueExtractor } = this.props;\r\n\r\n        return data\r\n            .findIndex((item, index) => null != item && value === valueExtractor(item, index));\r\n    }\r\n\r\n    selectedItem() {\r\n        let { data } = this.props;\r\n\r\n        return data[this.selectedIndex()];\r\n    }\r\n\r\n    isFocused() {\r\n        return this.focused;\r\n    }\r\n\r\n    itemSize() {\r\n        let { fontSize, itemPadding } = this.props;\r\n\r\n        return Math.ceil(fontSize * 1.5 + itemPadding * 2);\r\n    }\r\n\r\n    visibleItemCount() {\r\n        let { data, itemCount } = this.props;\r\n\r\n        return Math.min(data.length, itemCount);\r\n    }\r\n\r\n    tailItemCount() {\r\n        return Math.max(this.visibleItemCount() - 2, 0);\r\n    }\r\n\r\n    rippleInsets() {\r\n        let {\r\n            top = 16,\r\n            right = 0,\r\n            bottom = -8,\r\n            left = 0,\r\n        } = this.props.rippleInsets || {};\r\n\r\n        return { top, right, bottom, left };\r\n    }\r\n\r\n    resetScrollOffset() {\r\n        let { selected } = this.state;\r\n        let { data, dropdownPosition } = this.props;\r\n\r\n        let offset = 0;\r\n        let itemCount = data.length;\r\n        let itemSize = this.itemSize();\r\n        let tailItemCount = this.tailItemCount();\r\n        let visibleItemCount = this.visibleItemCount();\r\n\r\n        if (itemCount > visibleItemCount) {\r\n            if (null == dropdownPosition) {\r\n                switch (selected) {\r\n                    case -1:\r\n                        break;\r\n\r\n                    case 0:\r\n                    case 1:\r\n                        break;\r\n\r\n                    default:\r\n                        if (selected >= itemCount - tailItemCount) {\r\n                            offset = itemSize * (itemCount - visibleItemCount);\r\n                        } else {\r\n                            offset = itemSize * (selected - 1);\r\n                        }\r\n                }\r\n            } else {\r\n                let index = selected - dropdownPosition;\r\n\r\n                if (dropdownPosition < 0) {\r\n                    index -= visibleItemCount;\r\n                }\r\n\r\n                index = Math.max(0, index);\r\n                index = Math.min(index, itemCount - visibleItemCount);\r\n\r\n                if (~selected) {\r\n                    offset = itemSize * index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.scroll) {\r\n            this.scroll.scrollToOffset({ offset, animated: false });\r\n        }\r\n    }\r\n\r\n    updateRef(name, ref) {\r\n        this[name] = ref;\r\n    }\r\n\r\n    keyExtractor(item, index) {\r\n        let { valueExtractor } = this.props;\r\n\r\n        return `${index}-${valueExtractor(item, index)}`;\r\n    }\r\n\r\n    renderBase(props) {\r\n        let { value } = this.state;\r\n        let {\r\n            data,\r\n            renderBase,\r\n            labelExtractor,\r\n            dropdownOffset,\r\n            renderAccessory = this.renderAccessory,\r\n        } = this.props;\r\n\r\n        let index = this.selectedIndex();\r\n        let title;\r\n\r\n        if (~index) {\r\n            title = labelExtractor(data[index], index);\r\n        }\r\n\r\n        if (null == title) {\r\n            title = value;\r\n        }\r\n\r\n        if ('function' === typeof renderBase) {\r\n            return renderBase({ ...props, title, value, renderAccessory });\r\n        }\r\n\r\n        title = null == title || 'string' === typeof title ?\r\n            title :\r\n            String(title);\r\n\r\n        return (\r\n            <TextInput\r\n                style={{backgroundColor: \"transparent\", marginBottom: 16}}\r\n                label=''\r\n                {...props}\r\n                value={title}\r\n                editable={false}\r\n                onChangeText={undefined}\r\n                renderAccessory={renderAccessory}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderRipple() {\r\n        let {\r\n            baseColor,\r\n            rippleColor = baseColor,\r\n            rippleOpacity,\r\n            rippleDuration,\r\n            rippleCentered,\r\n            rippleSequential,\r\n        } = this.props;\r\n\r\n        let { bottom, ...insets } = this.rippleInsets();\r\n        let style = {\r\n            ...insets,\r\n\r\n            height: this.itemSize() - bottom,\r\n            position: 'absolute',\r\n        };\r\n\r\n        return (\r\n            <Ripple\r\n                style={style}\r\n                rippleColor={rippleColor}\r\n                rippleDuration={rippleDuration}\r\n                rippleOpacity={rippleOpacity}\r\n                rippleCentered={rippleCentered}\r\n                rippleSequential={rippleSequential}\r\n                ref={this.updateRippleRef}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderAccessory() {\r\n        let { baseColor: backgroundColor } = this.props;\r\n        let triangleStyle = { backgroundColor };\r\n\r\n        return (\r\n            <View style={styles.accessory}>\r\n                <View style={styles.triangleContainer}>\r\n                    <View style={[styles.triangle, triangleStyle]} />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    renderItem({ item, index }) {\r\n        if (null == item) {\r\n            return null;\r\n        }\r\n\r\n        let { selected, leftInset, rightInset } = this.state;\r\n\r\n        let {\r\n            valueExtractor,\r\n            labelExtractor,\r\n            propsExtractor,\r\n            textColor,\r\n            itemColor,\r\n            baseColor,\r\n            selectedItemColor = textColor,\r\n            disabledItemColor = baseColor,\r\n            fontSize,\r\n            itemTextStyle,\r\n            rippleOpacity,\r\n            rippleDuration,\r\n            shadeOpacity,\r\n        } = this.props;\r\n\r\n        let props = propsExtractor(item, index);\r\n\r\n        let { style, disabled }\r\n            = props\r\n            = {\r\n                rippleDuration,\r\n                rippleOpacity,\r\n                rippleColor: baseColor,\r\n\r\n                shadeColor: baseColor,\r\n                shadeOpacity,\r\n\r\n                ...props,\r\n\r\n                onPress: this.onSelect,\r\n            };\r\n\r\n        let value = valueExtractor(item, index);\r\n        let label = labelExtractor(item, index);\r\n\r\n        let title = null == label ?\r\n            value :\r\n            label;\r\n\r\n        let color = disabled ?\r\n            disabledItemColor :\r\n            ~selected ?\r\n                index === selected ?\r\n                    selectedItemColor :\r\n                    itemColor :\r\n                selectedItemColor;\r\n\r\n        let textStyle = { color, fontSize };\r\n\r\n        props.style = [\r\n            style,\r\n            {\r\n                height: this.itemSize(),\r\n                paddingLeft: leftInset,\r\n                paddingRight: rightInset,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <DropdownItem index={index} {...props}>\r\n                <Text style={[styles.item, itemTextStyle, textStyle]} numberOfLines={1}>\r\n                    {title}\r\n                </Text>\r\n            </DropdownItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            renderBase,\r\n            renderAccessory,\r\n            containerStyle,\r\n            labelContainerStyle,\r\n            overlayStyle: overlayStyleOverrides,\r\n            pickerStyle: pickerStyleOverrides,\r\n\r\n            rippleInsets,\r\n            rippleOpacity,\r\n            rippleCentered,\r\n            rippleSequential,\r\n\r\n            hitSlop,\r\n            pressRetentionOffset,\r\n            testID,\r\n            nativeID,\r\n            accessible,\r\n            accessibilityLabel,\r\n\r\n            supportedOrientations,\r\n\r\n            ...props\r\n        } = this.props;\r\n\r\n        let {\r\n            data,\r\n            disabled,\r\n            itemPadding,\r\n            dropdownPosition,\r\n        } = props;\r\n\r\n        let { left, top, width, opacity, selected, modal } = this.state;\r\n\r\n        let itemCount = data.length;\r\n        let visibleItemCount = this.visibleItemCount();\r\n        let tailItemCount = this.tailItemCount();\r\n        let itemSize = this.itemSize();\r\n\r\n        let height = 2 * itemPadding + itemSize * visibleItemCount;\r\n        let translateY = -itemPadding;\r\n\r\n        if (null == dropdownPosition) {\r\n            switch (selected) {\r\n                case -1:\r\n                    translateY -= 1 === itemCount ? 0 : itemSize;\r\n                    break;\r\n\r\n                case 0:\r\n                    break;\r\n\r\n                default:\r\n                    if (selected >= itemCount - tailItemCount) {\r\n                        translateY -= itemSize * (visibleItemCount - (itemCount - selected));\r\n                    } else {\r\n                        translateY -= itemSize;\r\n                    }\r\n            }\r\n        } else {\r\n            if (dropdownPosition < 0) {\r\n                translateY -= itemSize * (visibleItemCount + dropdownPosition);\r\n            } else {\r\n                translateY -= itemSize * dropdownPosition;\r\n            }\r\n        }\r\n\r\n        let overlayStyle = { opacity };\r\n\r\n        let pickerStyle = {\r\n            width,\r\n            height,\r\n            top,\r\n            left,\r\n            transform: [{ translateY }],\r\n        };\r\n\r\n        let touchableProps = {\r\n            disabled,\r\n            hitSlop,\r\n            pressRetentionOffset,\r\n            onPress: this.onPress,\r\n            testID,\r\n            nativeID,\r\n            accessible,\r\n            accessibilityLabel,\r\n        };\r\n\r\n        return (\r\n            <View onLayout={this.onLayout} ref={this.updateContainerRef} style={containerStyle}>\r\n                <TouchableWithoutFeedback {...touchableProps}>\r\n                    <View pointerEvents='box-only'>\r\n                        {this.renderBase(props)}\r\n                        {this.renderRipple()}\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n\r\n                <Modal\r\n                    visible={modal}\r\n                    transparent={true}\r\n                    onRequestClose={this.blur}\r\n                    supportedOrientations={supportedOrientations}\r\n                >\r\n                    <Animated.View\r\n                        style={[styles.overlay, overlayStyle, overlayStyleOverrides]}\r\n                        onStartShouldSetResponder={() => true}\r\n                        onResponderRelease={this.blur}\r\n                    >\r\n                        <View\r\n                            style={[styles.picker, pickerStyle, pickerStyleOverrides]}\r\n                            onStartShouldSetResponder={() => true}\r\n                        >\r\n                            <FlatList\r\n                                ref={this.updateScrollRef}\r\n                                data={data}\r\n                                style={styles.scroll}\r\n                                renderItem={this.renderItem}\r\n                                keyExtractor={this.keyExtractor}\r\n                                scrollEnabled={visibleItemCount < itemCount}\r\n                                contentContainerStyle={styles.scrollContainer}\r\n                            />\r\n                        </View>\r\n                    </Animated.View>\r\n                </Modal>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}