# Generated by Django 3.0.5 on 2021-04-24 20:32

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields
import djongo.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('season', models.CharField(blank=True, choices=[('Spring', 'spring'), ('Summer', 'summer'), ('Fall', 'fall'), ('Winter', 'winter')], max_length=10)),
                ('artist', models.CharField(blank=True, max_length=200)),
                ('genre', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('album', models.CharField(blank=True, max_length=200)),
                ('language', models.CharField(blank=True, max_length=100)),
                ('lyrics', models.CharField(blank=True, max_length=1000)),
                ('time', models.DateTimeField(blank=True)),
                ('yearReleased', models.IntegerField(blank=True, max_length=4)),
                ('albumArt', models.ImageField(blank=True, upload_to='images/')),
                ('file', models.FileField(blank=True, storage=djongo.storage.GridFSStorage(collection='songs'), upload_to='songs/')),
                ('fingerprint', models.FileField(blank=True, storage=djongo.storage.GridFSStorage(collection='songs'), upload_to='fingerprints/')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fav_artist', djongo.models.fields.JSONField(blank=True)),
                ('fav_genre', djongo.models.fields.JSONField(blank=True)),
                ('language', models.CharField(blank=True, max_length=12)),
                ('country', models.CharField(blank=True, max_length=12)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
